#!/usr/bin/env python3
"""
Generate Simulation Data
========================
T·∫°o d·ªØ li·ªáu m√¥ ph·ªèng cho People Counter System
"""

import random
import json
from datetime import datetime, timedelta


def generate_simulation_data(duration_minutes=30, interval_seconds=10):
    """
    T·∫°o d·ªØ li·ªáu m√¥ ph·ªèng v·ªÅ s·ªë l∆∞·ª£ng ng∆∞·ªùi thay ƒë·ªïi theo th·ªùi gian
    
    Args:
        duration_minutes (int): Th·ªùi gian m√¥ ph·ªèng (ph√∫t)
        interval_seconds (int): Kho·∫£ng th·ªùi gian gi·ªØa c√°c c·∫≠p nh·∫≠t (gi√¢y)
    
    Returns:
        list: Danh s√°ch c√°c thay ƒë·ªïi s·ªë ng∆∞·ªùi
    """
    num_entries = duration_minutes * 60 // interval_seconds
    log_data = []
    current_people = 0
    start_time = datetime.now()
    
    print(f"üîÑ ƒêang t·∫°o d·ªØ li·ªáu m√¥ ph·ªèng trong {duration_minutes} ph√∫t...")
    
    for i in range(num_entries):
        # T·∫°o timestamp cho m·ªói c·∫≠p nh·∫≠t
        timestamp = start_time + timedelta(seconds=i * interval_seconds)
        
        # T·∫°o thay ƒë·ªïi ng·∫´u nhi√™n (-1, 0, +1 ng∆∞·ªùi)
        change = random.choice([-1, 0, 1])
        new_people = max(0, current_people + change)  # ƒê·∫£m b·∫£o kh√¥ng √¢m
        
        # Ch·ªâ ghi log khi c√≥ thay ƒë·ªïi
        if new_people != current_people:
            log_data.append({
                "timestamp": timestamp.strftime("%Y-%m-%d %H:%M:%S"),
                "count": new_people
            })
            current_people = new_people
    
    return log_data


def save_data_to_json(data, filename="people_log.json"):
    """
    L∆∞u d·ªØ li·ªáu v√†o file JSON
    
    Args:
        data (list): D·ªØ li·ªáu c·∫ßn l∆∞u
        filename (str): T√™n file
    """
    with open(filename, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)
    print(f"‚úÖ ƒê√£ l∆∞u {len(data)} b·∫£n ghi v√†o '{filename}'")


def main():
    """
    H√†m ch√≠nh ƒë·ªÉ t·∫°o d·ªØ li·ªáu
    """
    print("üöÄ People Counter - Data Generator")
    print("=" * 40)
    
    # T·∫°o d·ªØ li·ªáu m√¥ ph·ªèng
    print("\n1Ô∏è‚É£ T·∫°o d·ªØ li·ªáu m√¥ ph·ªèng...")
    simulation_data = generate_simulation_data(duration_minutes=30, interval_seconds=10)
    save_data_to_json(simulation_data)
    
    # Hi·ªÉn th·ªã th√¥ng tin
    print(f"\nüìä Th·ªëng k√™ d·ªØ li·ªáu:")
    print(f"- T·ªïng s·ªë thay ƒë·ªïi: {len(simulation_data)}")
    print(f"- S·ªë ng∆∞·ªùi cu·ªëi c√πng: {simulation_data[-1]['count'] if simulation_data else 0}")
    print(f"- Th·ªùi gian m√¥ ph·ªèng: 30 ph√∫t")
    print(f"- Kho·∫£ng th·ªùi gian c·∫≠p nh·∫≠t: 10 gi√¢y")
    
    print("\n‚úÖ Ho√†n th√†nh! B·∫°n c√≥ th·ªÉ ch·∫°y dashboard b·∫±ng l·ªánh:")
    print("streamlit run dashboard.py")


if __name__ == "__main__":
    main() 